window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"dsmtools": {"fullname": "dsmtools", "modulename": "dsmtools", "kind": "module", "doc": "<h1 id=\"dsm-tools\">DSM-tools</h1>\n\n<p><strong>DSM-tools</strong> is a Python module that converts neuron morphology into sequences by binary tree \ntraversals and implements deep learning models for encoding the sequences and predicting cell types.</p>\n\n<p>This project was started by Feng Xiong in 2020, SEU-ALLEN, Nanjing. \nThe package was developed by Zuo-Han Zhao.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<h3 id=\"depedencies\">Depedencies</h3>\n\n<ul>\n<li>Python (&gt;=3.9)</li>\n<li>tensorflow (&gt;=2.10.0)</li>\n<li>scikit-learn (&gt;=1.1.3)</li>\n<li>SimpleITK (2.2.0)</li>\n<li>gensim (&gt;=4.2.0)</li>\n<li>matplotlib (&gt;=3.6.2)</li>\n<li>pandas (&gt;=1.5.1)</li>\n<li>importlib_resources (&gt;=5.10.0)</li>\n</ul>\n\n<h3 id=\"install-by-pypi\">Install by PyPI</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip install DSM-tools\n</code></pre>\n</div>\n\n<h3 id=\"install-by-github\">Install by GitHub</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip install git+https://github.com/xiongfengNJ/DSM-tools\n</code></pre>\n</div>\n\n<h2 id=\"user-guide\">User Guide</h2>\n\n<p>Here's some simple usage that get you a quick start.</p>\n\n<h3 id=\"transform-swc-files-to-sequence-dataframes\">Transform SWC files to sequence dataframes</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">dsmtools.preprocessing</span> <span class=\"kn\">import</span> <span class=\"n\">NeuronSequenceDataset</span>\n\n<span class=\"c1\"># dataset generation tool, with computation settings</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">NeuronSequenceDataset</span><span class=\"p\">(</span><span class=\"n\">swc_file_paths</span><span class=\"p\">,</span> <span class=\"n\">jobs</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># processing</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">read_parallel</span><span class=\"p\">()</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">qc_parallel</span><span class=\"p\">(</span><span class=\"n\">qc_len_thr</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">make_sequences_parallel</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># save the result (OrderedDict) as pickle</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">pickle_sequences</span><span class=\"p\">(</span><span class=\"s1\">&#39;output.pickle&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>By default, it gives you a set of features for each neuron by the order of preorder traversals. </p>\n\n<h3 id=\"predict-cell-types-with-han-model\">Predict cell types with HAN model</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">dsmtools.modeling</span> <span class=\"kn\">import</span> <span class=\"n\">DSMDataConverter</span><span class=\"p\">,</span> <span class=\"n\">DSMHierarchicalAttentionNetwork</span>\n\n<span class=\"c1\"># further convert the dataframes to dataset fed to tensorflow</span>\n<span class=\"n\">converter</span> <span class=\"o\">=</span> <span class=\"n\">DSMDataConverter</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">)</span>\n<span class=\"n\">han_x</span> <span class=\"o\">=</span> <span class=\"n\">converter</span><span class=\"o\">.</span><span class=\"n\">convert_for_han</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># models trained with our data ready for use</span>\n<span class=\"n\">han</span> <span class=\"o\">=</span> <span class=\"n\">DSMHierarchicalAttentionNetwork</span><span class=\"o\">.</span><span class=\"n\">load_1282_seu</span><span class=\"p\">()</span>\n<span class=\"n\">le</span> <span class=\"o\">=</span> <span class=\"n\">DSMHierarchicalAttentionNetwork</span><span class=\"o\">.</span><span class=\"n\">label_encoder_1282_seu</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># decode the one-hot matrix back to labels</span>\n<span class=\"n\">le</span><span class=\"o\">.</span><span class=\"n\">inverse_transform</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">han</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">han_x</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p>The prediction for autoencoder is similar.</p>\n\n<h3 id=\"train-an-autoencoder\">Train an autoencoder</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">dsmtools.modeling</span> <span class=\"kn\">import</span> <span class=\"n\">DSMAutoencoder</span>\n\n<span class=\"n\">ae_x</span> <span class=\"o\">=</span> <span class=\"n\">converter</span><span class=\"o\">.</span><span class=\"n\">convert_for_ae</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># build model</span>\n<span class=\"n\">ae</span> <span class=\"o\">=</span> <span class=\"n\">DSMAutoencoder</span><span class=\"p\">(</span><span class=\"n\">result_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;output&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ae</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">input_dim</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">seq_max_len</span><span class=\"o\">=</span><span class=\"mi\">2000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># training</span>\n<span class=\"n\">ae</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">train_x</span><span class=\"p\">,</span> <span class=\"n\">test_x</span><span class=\"p\">,</span> <span class=\"n\">model_save_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;ae_checkpoint.h5&#39;</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n\n<span class=\"n\">ae</span><span class=\"o\">.</span><span class=\"n\">plot_learning_curve</span><span class=\"p\">(</span><span class=\"s1\">&#39;ae_learning.png&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>The training for HAN is similar.</p>\n\n<p>Please see the <a href=\"https://github.com/xiongfengNJ/DSM-tools/tree/master/examples\">examples</a> directory for details.</p>\n\n<h3 id=\"fine-tune-the-data-processing\">Fine tune the data processing</h3>\n\n<p>You can inherit classes like <a href=\"https://github.com/xiongfengNJ/DSM-tools/tree/master/src/dsmtools/preprocessing/sequencing.py\"><code>NeuronSequenceDataset</code></a>\nto change the data processing behaviours, which should be quite easy.\nThe tree manipulating class <a href=\"https://github.com/xiongfengNJ/DSM-tools/tree/master/src/dsmtools/preprocessing/neuron_tree.py\"><code>NeuronTree</code></a>\noffers you the freedom of Exploring your own definition of subtree nodes to generate traversal sequences.</p>\n\n<h2 id=\"documentation\">Documentation</h2>\n\n<p>Comming soon..</p>\n\n<h2 id=\"citation\">Citation</h2>\n\n<p>Our paper is still under review, please check the link for preprint. For now, you can cite it as:</p>\n\n<p>Hanchuan Peng, Feng Xiong, Peng Xie et al. DSM: Deep Sequential Model for Complete Neuronal Morphology Representation \nand Feature Extraction, 29 June 2022, PREPRINT (Version 1) available at Research Square \n[<a href=\"https://doi.org/10.21203/rs.3.rs-1627621/v1]\">https://doi.org/10.21203/rs.3.rs-1627621/v1]</a> </p>\n"}, "dsmtools.modeling": {"fullname": "dsmtools.modeling", "modulename": "dsmtools.modeling", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.modeling.AE": {"fullname": "dsmtools.modeling.AE", "modulename": "dsmtools.modeling.AE", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.modeling.AE.DSMAutoencoder": {"fullname": "dsmtools.modeling.AE.DSMAutoencoder", "modulename": "dsmtools.modeling.AE", "qualname": "DSMAutoencoder", "kind": "class", "doc": "<p>TODO</p>\n", "bases": "dsmtools.modeling.model_abstract.ModelAbstract"}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"fullname": "dsmtools.modeling.AE.DSMAutoencoder.__init__", "modulename": "dsmtools.modeling.AE", "qualname": "DSMAutoencoder.__init__", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>result_dir</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">result_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"fullname": "dsmtools.modeling.AE.DSMAutoencoder.compile", "modulename": "dsmtools.modeling.AE", "qualname": "DSMAutoencoder.compile", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>seq_max_len</strong>: </li>\n<li><strong>hidden_dim</strong>: </li>\n<li><strong>input_dim</strong>: </li>\n<li><strong>optimizer</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">input_dim</span><span class=\"o\">=</span><span class=\"mi\">6</span>,</span><span class=\"param\">\t<span class=\"n\">seq_max_len</span><span class=\"o\">=</span><span class=\"mi\">2000</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_dim</span><span class=\"o\">=</span><span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"o\">=&lt;</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">optimizers</span><span class=\"o\">.</span><span class=\"n\">optimizer_v2</span><span class=\"o\">.</span><span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">Adam</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"fullname": "dsmtools.modeling.AE.DSMAutoencoder.fit", "modulename": "dsmtools.modeling.AE", "qualname": "DSMAutoencoder.fit", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_train</strong>: </li>\n<li><strong>data_test</strong>: </li>\n<li><strong>batch_size</strong>: </li>\n<li><strong>epochs</strong>: </li>\n<li><strong>model_save_path</strong>: </li>\n<li><strong>shuffle</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data_train</span>,</span><span class=\"param\">\t<span class=\"n\">data_test</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">model_save_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"fullname": "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve", "modulename": "dsmtools.modeling.AE", "qualname": "DSMAutoencoder.plot_learning_curve", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>: </li>\n<li><strong>fig_size</strong>: </li>\n<li><strong>dpi</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fig_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">200</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"fullname": "dsmtools.modeling.AE.DSMAutoencoder.predict", "modulename": "dsmtools.modeling.AE", "qualname": "DSMAutoencoder.predict", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"fullname": "dsmtools.modeling.AE.DSMAutoencoder.evaluate", "modulename": "dsmtools.modeling.AE", "qualname": "DSMAutoencoder.evaluate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"fullname": "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu", "modulename": "dsmtools.modeling.AE", "qualname": "DSMAutoencoder.load_1282_seu", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN": {"fullname": "dsmtools.modeling.HAN", "modulename": "dsmtools.modeling.HAN", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.modeling.HAN.AttentionLayer": {"fullname": "dsmtools.modeling.HAN.AttentionLayer", "modulename": "dsmtools.modeling.HAN", "qualname": "AttentionLayer", "kind": "class", "doc": "<p>This is the class from which all layers inherit.</p>\n\n<p>A layer is a callable object that takes as input one or more tensors and\nthat outputs one or more tensors. It involves <em>computation</em>, defined\nin the <code>call()</code> method, and a <em>state</em> (weight variables). State can be\ncreated in various places, at the convenience of the subclass implementer:</p>\n\n<ul>\n<li>in <code>__init__()</code>;</li>\n<li>in the optional <code>build()</code> method, which is invoked by the first\n<code>__call__()</code> to the layer, and supplies the shape(s) of the input(s),\nwhich may not have been known at initialization time;</li>\n<li>in the first invocation of <code>call()</code>, with some caveats discussed\nbelow.</li>\n</ul>\n\n<p>Users will just instantiate a layer and then treat it as a callable.</p>\n\n<p>Args:\n  trainable: Boolean, whether the layer's variables should be trainable.\n  name: String name of the layer.\n  dtype: The dtype of the layer's computations and weights. Can also be a\n    <code>tf.keras.mixed_precision.Policy</code>, which allows the computation and\n    weight dtype to differ. Default of <code>None</code> means to use\n    <code>tf.keras.mixed_precision.global_policy()</code>, which is a float32 policy\n    unless set to different value.\n  dynamic: Set this to <code>True</code> if your layer should only be run eagerly, and\n    should not be used to generate a static computation graph.\n    This would be the case for a Tree-RNN or a recursive network,\n    for example, or generally for any layer that manipulates tensors\n    using Python control flow. If <code>False</code>, we assume that the layer can\n    safely be used to generate a static computation graph.</p>\n\n<p>Attributes:\n  name: The name of the layer (string).\n  dtype: The dtype of the layer's weights.\n  variable_dtype: Alias of <code>dtype</code>.\n  compute_dtype: The dtype of the layer's computations. Layers automatically\n    cast inputs to this dtype which causes the computations and output to\n    also be in this dtype. When mixed precision is used with a\n    <code>tf.keras.mixed_precision.Policy</code>, this will be different than\n    <code>variable_dtype</code>.\n  dtype_policy: The layer's dtype policy. See the\n    <code>tf.keras.mixed_precision.Policy</code> documentation for details.\n  trainable_weights: List of variables to be included in backprop.\n  non_trainable_weights: List of variables that should not be\n    included in backprop.\n  weights: The concatenation of the lists trainable_weights and\n    non_trainable_weights (in this order).\n  trainable: Whether the layer should be trained (boolean), i.e. whether\n    its potentially-trainable weights should be returned as part of\n    <code>layer.trainable_weights</code>.\n  input_spec: Optional (list of) <code>InputSpec</code> object(s) specifying the\n    constraints on inputs that can be accepted by the layer.</p>\n\n<p>We recommend that descendants of <code>Layer</code> implement the following methods:</p>\n\n<ul>\n<li><code>__init__()</code>: Defines custom layer attributes, and creates layer weights\nthat do not depend on input shapes, using <code>add_weight()</code>, or other state.</li>\n<li><code>build(self, input_shape)</code>: This method can be used to create weights that\ndepend on the shape(s) of the input(s), using <code>add_weight()</code>, or other\nstate. <code>__call__()</code> will automatically build the layer (if it has not been\nbuilt yet) by calling <code>build()</code>.</li>\n<li><code>call(self, inputs, *args, **kwargs)</code>: Called in <code>__call__</code> after making\nsure <code>build()</code> has been called. <code>call()</code> performs the logic of applying\nthe layer to the <code>inputs</code>. The first invocation may additionally create\nstate that could not be conveniently created in <code>build()</code>; see its\ndocstring for details.\nTwo reserved keyword arguments you can optionally use in <code>call()</code> are:\n<ul>\n<li><code>training</code> (boolean, whether the call is in inference mode or training\nmode). See more details in <a href=\"a href=&quot;https://www.tensorflow.org/guide/keras/custom_layers_and_models#privileged_training_argument_in_the_call_method&quot;&gt;https://www.tensorflow.org/guide/keras/custom_layers_and_models#privileged_training_argument_in_the_call_method&lt;/a\">the layer/model subclassing guide</a></li>\n<li><code>mask</code> (boolean tensor encoding masked timesteps in the input, used\nin RNN layers). See more details in\n<a href=\"a href=&quot;https://www.tensorflow.org/guide/keras/custom_layers_and_models#privileged_mask_argument_in_the_call_method&quot;&gt;https://www.tensorflow.org/guide/keras/custom_layers_and_models#privileged_mask_argument_in_the_call_method&lt;/a\">the layer/model subclassing guide</a>\nA typical signature for this method is <code>call(self, inputs)</code>, and user\ncould optionally add <code>training</code> and <code>mask</code> if the layer need them. <code>*args</code>\nand <code>**kwargs</code> is only useful for future extension when more input\nparameters are planned to be added.</li>\n</ul></li>\n<li><code>get_config(self)</code>: Returns a dictionary containing the configuration used\nto initialize this layer. If the keys differ from the arguments\nin <code>__init__</code>, then override <code>from_config(self)</code> as well.\nThis method is used when saving\nthe layer or a model that contains this layer.</li>\n</ul>\n\n<p>Examples:</p>\n\n<p>Here's a basic example: a layer with two variables, <code>w</code> and <code>b</code>,\nthat returns <code>y = w . x + b</code>.\nIt shows how to implement <code>build()</code> and <code>call()</code>.\nVariables set as attributes of a layer are tracked as weights\nof the layers (in <code>layer.weights</code>).</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SimpleDense</span><span class=\"p\">(</span><span class=\"n\">Layer</span><span class=\"p\">):</span>\n\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">):</span>\n      <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">SimpleDense</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">units</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">input_shape</span><span class=\"p\">):</span>  <span class=\"c1\"># Create the state of the layer (weights)</span>\n    <span class=\"n\">w_init</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">random_normal_initializer</span><span class=\"p\">()</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">(</span>\n        <span class=\"n\">initial_value</span><span class=\"o\">=</span><span class=\"n\">w_init</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">input_shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">),</span>\n                             <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;float32&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">trainable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">b_init</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">zeros_initializer</span><span class=\"p\">()</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">(</span>\n        <span class=\"n\">initial_value</span><span class=\"o\">=</span><span class=\"n\">b_init</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">,),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;float32&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">trainable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">call</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>  <span class=\"c1\"># Defines the computation from inputs to outputs</span>\n      <span class=\"k\">return</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span>\n\n<span class=\"c1\"># Instantiates the layer.</span>\n<span class=\"n\">linear_layer</span> <span class=\"o\">=</span> <span class=\"n\">SimpleDense</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This will also call `build(input_shape)` and create the weights.</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">linear_layer</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">linear_layer</span><span class=\"o\">.</span><span class=\"n\">weights</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n\n<span class=\"c1\"># These weights are trainable, so they&#39;re listed in `trainable_weights`:</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">linear_layer</span><span class=\"o\">.</span><span class=\"n\">trainable_weights</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n</code></pre>\n</div>\n\n<p>Note that the method <code>add_weight()</code> offers a shortcut to create weights:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SimpleDense</span><span class=\"p\">(</span><span class=\"n\">Layer</span><span class=\"p\">):</span>\n\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">):</span>\n      <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">SimpleDense</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">units</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">input_shape</span><span class=\"p\">):</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_weight</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">input_shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">),</span>\n                               <span class=\"n\">initializer</span><span class=\"o\">=</span><span class=\"s1\">&#39;random_normal&#39;</span><span class=\"p\">,</span>\n                               <span class=\"n\">trainable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_weight</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">,),</span>\n                               <span class=\"n\">initializer</span><span class=\"o\">=</span><span class=\"s1\">&#39;random_normal&#39;</span><span class=\"p\">,</span>\n                               <span class=\"n\">trainable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">call</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>\n      <span class=\"k\">return</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span>\n</code></pre>\n</div>\n\n<p>Besides trainable weights, updated via backpropagation during training,\nlayers can also have non-trainable weights. These weights are meant to\nbe updated manually during <code>call()</code>. Here's a example layer that computes\nthe running sum of its inputs:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ComputeSum</span><span class=\"p\">(</span><span class=\"n\">Layer</span><span class=\"p\">):</span>\n\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">input_dim</span><span class=\"p\">):</span>\n      <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ComputeSum</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n      <span class=\"c1\"># Create a non-trainable weight.</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"n\">initial_value</span><span class=\"o\">=</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">input_dim</span><span class=\"p\">,)),</span>\n                               <span class=\"n\">trainable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">call</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"o\">.</span><span class=\"n\">assign_add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_sum</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n      <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">total</span>\n\n<span class=\"n\">my_sum</span> <span class=\"o\">=</span> <span class=\"n\">ComputeSum</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">my_sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">numpy</span><span class=\"p\">())</span>  <span class=\"c1\"># [2. 2.]</span>\n\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">my_sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">numpy</span><span class=\"p\">())</span>  <span class=\"c1\"># [4. 4.]</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">weights</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">non_trainable_weights</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">trainable_weights</span> <span class=\"o\">==</span> <span class=\"p\">[]</span>\n</code></pre>\n</div>\n\n<p>For more information about creating layers, see the guide\n<a href=\"a href=&quot;https://www.tensorflow.org/guide/keras/custom_layers_and_models&quot;&gt;https://www.tensorflow.org/guide/keras/custom_layers_and_models&lt;/a\">Making new Layers and Models via subclassing</a></p>\n", "bases": "keras.engine.base_layer.Layer"}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"fullname": "dsmtools.modeling.HAN.AttentionLayer.__init__", "modulename": "dsmtools.modeling.HAN", "qualname": "AttentionLayer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">embedding_dim</span>, </span><span class=\"param\"><span class=\"n\">name</span></span>)</span>"}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"fullname": "dsmtools.modeling.HAN.AttentionLayer.supports_masking", "modulename": "dsmtools.modeling.HAN", "qualname": "AttentionLayer.supports_masking", "kind": "variable", "doc": "<p>Whether this layer supports computing a mask using <code>compute_mask</code>.</p>\n"}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"fullname": "dsmtools.modeling.HAN.AttentionLayer.get_config", "modulename": "dsmtools.modeling.HAN", "qualname": "AttentionLayer.get_config", "kind": "function", "doc": "<p>Returns the config of the layer.</p>\n\n<p>A layer config is a Python dictionary (serializable)\ncontaining the configuration of a layer.\nThe same layer can be reinstantiated later\n(without its trained weights) from this configuration.</p>\n\n<p>The config of a layer does not include connectivity\ninformation, nor the layer class name. These are handled\nby <code>Network</code> (one layer of abstraction above).</p>\n\n<p>Note that <code>get_config()</code> does not guarantee to return a fresh copy of\ndict every time it is called. The callers should make a copy of the\nreturned dict if they want to modify it.</p>\n\n<p>Returns:\n    Python dictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"fullname": "dsmtools.modeling.HAN.AttentionLayer.compute_mask", "modulename": "dsmtools.modeling.HAN", "qualname": "AttentionLayer.compute_mask", "kind": "function", "doc": "<p>Computes an output mask tensor.</p>\n\n<p>Args:\n    inputs: Tensor or list of tensors.\n    mask: Tensor or list of tensors.</p>\n\n<p>Returns:\n    None or a tensor (or list of tensors,\n        one per output tensor of the layer).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">input_mask</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.AttentionLayer.call": {"fullname": "dsmtools.modeling.HAN.AttentionLayer.call", "modulename": "dsmtools.modeling.HAN", "qualname": "AttentionLayer.call", "kind": "function", "doc": "<p>This is where the layer's logic lives.</p>\n\n<p>The <code>call()</code> method may not create state (except in its first\ninvocation, wrapping the creation of variables or other resources in\n<code>tf.init_scope()</code>).  It is recommended to create state in <code>__init__()</code>,\nor the <code>build()</code> method that is called automatically before <code>call()</code>\nexecutes the first time.</p>\n\n<p>Args:\n  inputs: Input tensor, or dict/list/tuple of input tensors.\n    The first positional <code>inputs</code> argument is subject to special rules:\n    - <code>inputs</code> must be explicitly passed. A layer cannot have zero\n      arguments, and <code>inputs</code> cannot be provided via the default value\n      of a keyword argument.\n    - NumPy array or Python scalar values in <code>inputs</code> get cast as\n      tensors.\n    - Keras mask metadata is only collected from <code>inputs</code>.\n    - Layers are built (<code>build(input_shape)</code> method)\n      using shape info from <code>inputs</code> only.\n    - <code>input_spec</code> compatibility is only checked against <code>inputs</code>.\n    - Mixed precision input casting is only applied to <code>inputs</code>.\n      If a layer has tensor arguments in <code>*args</code> or <code>**kwargs</code>, their\n      casting behavior in mixed precision should be handled manually.\n    - The SavedModel input specification is generated using <code>inputs</code>\n      only.\n    - Integration with various ecosystem packages like TFMOT, TFLite,\n      TF.js, etc is only supported for <code>inputs</code> and not for tensors in\n      positional and keyword arguments.\n  <em>args: Additional positional arguments. May contain tensors, although\n    this is not recommended, for the reasons above.\n  *</em>kwargs: Additional keyword arguments. May contain tensors, although\n    this is not recommended, for the reasons above.\n    The following optional keyword arguments are reserved:\n    - <code>training</code>: Boolean scalar tensor of Python boolean indicating\n      whether the <code>call</code> is meant for training or inference.\n    - <code>mask</code>: Boolean input mask. If the layer's <code>call()</code> method takes a\n      <code>mask</code> argument, its default value will be set to the mask\n      generated for <code>inputs</code> by the previous layer (if <code>input</code> did come\n      from a layer that generated a corresponding mask, i.e. if it came\n      from a Keras layer with masking support).</p>\n\n<p>Returns:\n  A tensor or list/tuple of tensors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"fullname": "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape", "modulename": "dsmtools.modeling.HAN", "qualname": "AttentionLayer.compute_output_shape", "kind": "function", "doc": "<p>Computes the output shape of the layer.</p>\n\n<p>This method will cause the layer's state to be built, if that has not\nhappened before. This requires that the layer will later be used with\ninputs that match the input shape provided here.</p>\n\n<p>Args:\n    input_shape: Shape tuple (tuple of integers)\n        or list of shape tuples (one per output tensor of the layer).\n        Shape tuples can include None for free dimensions,\n        instead of an integer.</p>\n\n<p>Returns:\n    An input shape tuple.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_shape</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"fullname": "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork", "modulename": "dsmtools.modeling.HAN", "qualname": "DSMHierarchicalAttentionNetwork", "kind": "class", "doc": "<p>TODO</p>\n", "bases": "dsmtools.modeling.model_abstract.ModelAbstract"}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"fullname": "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__", "modulename": "dsmtools.modeling.HAN", "qualname": "DSMHierarchicalAttentionNetwork.__init__", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>result_dir</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">result_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"fullname": "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile", "modulename": "dsmtools.modeling.HAN", "qualname": "DSMHierarchicalAttentionNetwork.compile", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>max_len_sentence</strong>: </li>\n<li><strong>max_len_word</strong>: </li>\n<li><strong>class_num</strong>: </li>\n<li><strong>last_activation</strong>: </li>\n<li><strong>index_test</strong>: </li>\n<li><strong>input_dim</strong>: </li>\n<li><strong>optimizer</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">input_dim</span><span class=\"o\">=</span><span class=\"mi\">6</span>,</span><span class=\"param\">\t<span class=\"n\">max_len_sentence</span><span class=\"o\">=</span><span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">max_len_word</span><span class=\"o\">=</span><span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">class_num</span><span class=\"o\">=</span><span class=\"mi\">12</span>,</span><span class=\"param\">\t<span class=\"n\">last_activation</span><span class=\"o\">=</span><span class=\"s1\">&#39;softmax&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">index_test</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"o\">=&lt;</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">optimizers</span><span class=\"o\">.</span><span class=\"n\">optimizer_v2</span><span class=\"o\">.</span><span class=\"n\">rmsprop</span><span class=\"o\">.</span><span class=\"n\">RMSprop</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"fullname": "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit", "modulename": "dsmtools.modeling.HAN", "qualname": "DSMHierarchicalAttentionNetwork.fit", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x_train</strong>: </li>\n<li><strong>y_train</strong>: </li>\n<li><strong>x_test</strong>: </li>\n<li><strong>y_test</strong>: </li>\n<li><strong>batch_size</strong>: </li>\n<li><strong>epochs</strong>: </li>\n<li><strong>model_save_path</strong>: </li>\n<li><strong>shuffle</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x_train</span>,</span><span class=\"param\">\t<span class=\"n\">y_train</span>,</span><span class=\"param\">\t<span class=\"n\">x_test</span>,</span><span class=\"param\">\t<span class=\"n\">y_test</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">400</span>,</span><span class=\"param\">\t<span class=\"n\">model_save_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"fullname": "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve", "modulename": "dsmtools.modeling.HAN", "qualname": "DSMHierarchicalAttentionNetwork.plot_learning_curve", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>: </li>\n<li><strong>fig_size</strong>: </li>\n<li><strong>dpi</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fig_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">200</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"fullname": "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate", "modulename": "dsmtools.modeling.HAN", "qualname": "DSMHierarchicalAttentionNetwork.evaluate", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>: </li>\n<li><strong>y</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"fullname": "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu", "modulename": "dsmtools.modeling.HAN", "qualname": "DSMHierarchicalAttentionNetwork.load_1282_seu", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"fullname": "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu", "modulename": "dsmtools.modeling.HAN", "qualname": "DSMHierarchicalAttentionNetwork.label_encoder_1282_seu", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.data_prep": {"fullname": "dsmtools.modeling.data_prep", "modulename": "dsmtools.modeling.data_prep", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.modeling.data_prep.DSMDataConverter": {"fullname": "dsmtools.modeling.data_prep.DSMDataConverter", "modulename": "dsmtools.modeling.data_prep", "qualname": "DSMDataConverter", "kind": "class", "doc": "<p>TODO</p>\n"}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"fullname": "dsmtools.modeling.data_prep.DSMDataConverter.__init__", "modulename": "dsmtools.modeling.data_prep", "qualname": "DSMDataConverter.__init__", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dataset</strong>: </li>\n<li><strong>w2v_model</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">OrderedDict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">w2v_model</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">gensim</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">word2vec</span><span class=\"o\">.</span><span class=\"n\">Word2Vec</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"fullname": "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae", "modulename": "dsmtools.modeling.data_prep", "qualname": "DSMDataConverter.convert_for_ae", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pad_seq_max_len</strong>: </li>\n<li><strong>features</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pad_seq_max_len</span><span class=\"o\">=</span><span class=\"mi\">2000</span>, </span><span class=\"param\"><span class=\"n\">features</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;region&#39;</span><span class=\"p\">,)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"fullname": "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han", "modulename": "dsmtools.modeling.data_prep", "qualname": "DSMDataConverter.convert_for_han", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>max_len_word</strong>: </li>\n<li><strong>max_len_sentence</strong>: </li>\n<li><strong>features</strong>: </li>\n<li><strong>labels</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">max_len_word</span><span class=\"o\">=</span><span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">max_len_sentence</span><span class=\"o\">=</span><span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">features</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;region&#39;</span><span class=\"p\">,)</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.model_abstract": {"fullname": "dsmtools.modeling.model_abstract", "modulename": "dsmtools.modeling.model_abstract", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.modeling.model_abstract.ModelAbstract": {"fullname": "dsmtools.modeling.model_abstract.ModelAbstract", "modulename": "dsmtools.modeling.model_abstract", "qualname": "ModelAbstract", "kind": "class", "doc": "<p>TODO</p>\n"}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"fullname": "dsmtools.modeling.model_abstract.ModelAbstract.__init__", "modulename": "dsmtools.modeling.model_abstract", "qualname": "ModelAbstract.__init__", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>result_dir</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">result_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span></span>)</span>"}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"fullname": "dsmtools.modeling.model_abstract.ModelAbstract.load", "modulename": "dsmtools.modeling.model_abstract", "qualname": "ModelAbstract.load", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"fullname": "dsmtools.modeling.model_abstract.ModelAbstract.predict", "modulename": "dsmtools.modeling.model_abstract", "qualname": "ModelAbstract.predict", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing": {"fullname": "dsmtools.preprocessing", "modulename": "dsmtools.preprocessing", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.preprocessing.neuron_tree": {"fullname": "dsmtools.preprocessing.neuron_tree", "modulename": "dsmtools.preprocessing.neuron_tree", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"fullname": "dsmtools.preprocessing.neuron_tree.BinarySubtree", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "BinarySubtree", "kind": "class", "doc": "<p>Node by node tree for the NeuronTreeSequencer class. It's ordered and children are lesser and\ngreater instead of left and child.\nThe order is based on total path length of subtree of either node, calculated by recursion and the coordinates given\nat initialization time.</p>\n\n<p>Once given during initialization, the properties shouldn't be modified. As some properties are cached, this is safe.</p>\n\n<p>When the node isn't bifurcation, the child is always given to the lesser. There is a comparison strategy to ensure\nthat.</p>\n"}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"fullname": "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "BinarySubtree.__init__", "kind": "function", "doc": "<p>Set up an BinarySubtree based on the current node and its children. The child can be an iterable\nnot longer than 2. It can also be a generator whose computation can be done at initialization time.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  the SWC node index.</li>\n<li><strong>coord</strong>:  the 3D coordinate of the node.</li>\n<li><strong>children</strong>:  an iterable that contains at most 2 child BinarySubtree, this can be a generator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">coord</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span></span>)</span>"}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"fullname": "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "BinarySubtree.tot_path_len", "kind": "function", "doc": "<p>Sum of path distance under this node.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"fullname": "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "BinarySubtree.preorder", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"fullname": "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "BinarySubtree.inorder", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"fullname": "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "BinarySubtree.postorder", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"fullname": "dsmtools.preprocessing.neuron_tree.NeuronTree", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "NeuronTree", "kind": "class", "doc": "<p>Class generating different ordering traversals for the whole SWC neuron tree.</p>\n\n<ul>\n<li>USED FEATURES OF SWC\nThis class uses root, bifurcation, terminal to signify topological nodes and traits, and soma, axon, dendrite to\nsignify biological features.</li>\n</ul>\n\n<ol>\n<li><p>Topological features are fixed for a specific tree, and used for the regularization of the tree structure,\ne.g. no nodes can have more than 2 branches other than roots, and subtree backtracking must end before the root\n(as they must be binary tree). Such regularization is in case for inputting SWC with multiple roots\n(common for some automatic reconstruction), which is highly deprecated.</p></li>\n<li><p>Biological features are node annotation that helps you to cut out subtrees, typically prepared as the type field\nin SWC for most manual reconstructions, but uncommon for some others. Without this info, the program cannot tell\nthe difference between axons and dendrites, and will output the very subtrees sprouting from the root.\nYou can also define your own type and cut more interesting subtrees anyway you like. It's just annotation.</p></li>\n</ol>\n"}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"fullname": "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "NeuronTree.__init__", "kind": "function", "doc": "<p>Initialize a NeuronTreeSequencer object by assigning private properties and annotate the SWC. The dataframe is\nby default referenced and there's no modification to it in this class, but as you are responsible for\nmaintaining the dataframe, their modification during this class's usage would cause unpredictable results.</p>\n\n<p>As recursion will be used, for betting managing the system attributes. Here provides a recursion limit setter.\nAny use of recursion will temporarily set the limit to the value specified. It has to be higher than\nthe max depth of your SWC tree. Or you should do down-sampling for your I beforehand.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>swc</strong>:  the SWC dataframe, no modification during usage.</li>\n<li><strong>deep_copy</strong>:  whether to deep copy the original dataframe in case it could be modified during usage.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">swc</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">deep_copy</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"fullname": "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "NeuronTree.find_binary_trees_in", "kind": "function", "doc": "<p>Merging any founded backtracking within a subset of its nodes, and recursively build subtrees. Trees are\nstored as a list that can be referenced as a property in this class.</p>\n\n<p>The subtrees are defined as the deepest trees constructed by those nodes. Usually, it's used to differentiate\nbetween dendrite and axon subtrees. Because the root of some subtrees, for instance, that of axon can be\ndiverse, either from the soma or from a dendrite, so finding it top-down isn't effective.</p>\n\n<p>If the nodes are not contiguous, because this program backtracks from virtual terminals, it will output\ntrees as well, with vertical breakups. This feature will be make it useful to preprocessing discrete arbors.</p>\n\n<p>Note this won't necessarily give you the\nbiological stems,  i.e. the main one-level branches of a neuron, unless there's no branch point alongside the\nroot. So you should make sure the topology of soma region is precise, or make your own node collection (e.g.\ndraw a circle around the soma and exclude the nodes within, like seeing them as roots) and do\nthe subtree finding.</p>\n\n<p>Disabling overwrite gives you the flexibility to build trees multiple times for different node types.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>index</strong>:  an iterable containing nodes including the subtrees to search.</li>\n<li><strong>overwrite</strong>:  whether to overwrite the existing trees or extend, default as False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"fullname": "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal", "modulename": "dsmtools.preprocessing.neuron_tree", "qualname": "NeuronTree.collective_traversal", "kind": "function", "doc": "<p>Obtain traversals of three orders for a list of trees and combine them into one by some priority.</p>\n\n<p>For some applications, like classification, one ordering is quite enough. Yet reconstructing the original tree\nrequires the inorder with either the pre- or the postorder traversal.</p>\n\n<p>The priority is whether the lesser or the greater subtree will be traversed as the left or right child.</p>\n\n<p>This function also chains the traversal of each binary tree into one, by the same order with the traversal in\neach subtree.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ordering</strong>:  the traversal type, either 'pre', 'in', or 'post'.</li>\n<li><strong>lesser_first</strong>:  whether traversing from lesser to greater, affect both within and among subtrees.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>a list of node index.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"s1\">&#39;pre&#39;</span>, </span><span class=\"param\"><span class=\"n\">lesser_first</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.sequencing": {"fullname": "dsmtools.preprocessing.sequencing", "modulename": "dsmtools.preprocessing.sequencing", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"fullname": "dsmtools.preprocessing.sequencing.NeuronSequenceDataset", "modulename": "dsmtools.preprocessing.sequencing", "qualname": "NeuronSequenceDataset", "kind": "class", "doc": "<p>Generate and prepare dataset from multiple SWC files to be further converted into dataset that can be\nused by our HAN and AE.</p>\n\n<p>By default, it does a necessary qc before a lesser to greater subtree preorder traversal and return features indeed\nsuch way.</p>\n\n<p>If you need specifying some or all of the sequence conversion to your like, you can inherit this class\nand define a new set of function for preprocessing processing, like the way this class's functions do. It's quite\nsimple.</p>\n\n<p>The object of this class, after data generation, is passed to and used by dataset generation processes\nof the models' classes.</p>\n"}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"fullname": "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__", "modulename": "dsmtools.preprocessing.sequencing", "qualname": "NeuronSequenceDataset.__init__", "kind": "function", "doc": "<p>Set up a dataset class to generate sequence preprocessing of your neuron structure in parallel, with which\nyou can start doing classification and autoencoder.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>swc_paths</strong>:  an iterable of file paths to the SWC files to load.\nthe classifier's result, for its training. Otherwise, it can be left as None.</li>\n<li><strong>show_failure</strong>:  whether to print failed swc during processing, default as True.</li>\n<li><strong>debug</strong>:  whether to print traceback messages when processes fail, default as False.</li>\n<li><strong>chunk_size</strong>:  the chunk size for parallel processing, default as 10.</li>\n<li><strong>jobs</strong>:  number of jobs for parallel computation, default as 1.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">swc_paths</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">show_failure</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">jobs</span><span class=\"o\">=</span><span class=\"mi\">1</span></span>)</span>"}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"fullname": "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences", "modulename": "dsmtools.preprocessing.sequencing", "qualname": "NeuronSequenceDataset.pickle_sequences", "kind": "function", "doc": "<p>Save the generated sequences as an ordered dict to a pickle file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  the path to save the pickle</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"fullname": "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc", "modulename": "dsmtools.preprocessing.sequencing", "qualname": "NeuronSequenceDataset.pickle_qc", "kind": "function", "doc": "<p>Save the SWC dataframes after qc as an ordered dict to a pickle file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  the path to save the pickle</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"fullname": "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result", "modulename": "dsmtools.preprocessing.sequencing", "qualname": "NeuronSequenceDataset.result", "kind": "function", "doc": "<p>Return the sequence dataframe ordered dict. For safety, by default it is a deep copy, just in case you\nmodify some items in the original copy unknowingly. If you know what you are doing and intend to save memory,\nyour can turn it off.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>deep</strong>:  whether return a deep copy or just reference.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>an ordered dict mapping SWC paths to their sequence dataframes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deep</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"fullname": "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel", "modulename": "dsmtools.preprocessing.sequencing", "qualname": "NeuronSequenceDataset.read_parallel", "kind": "function", "doc": "<p>Read all the given SWC files and store them as a list of dataframes within this object.\nThe multiprocessing parameters are given by class initialization.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"fullname": "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel", "modulename": "dsmtools.preprocessing.sequencing", "qualname": "NeuronSequenceDataset.qc_parallel", "kind": "function", "doc": "<p>Commit quality control on all the readable SWC dataframes and store them as another list.\nThe multiprocessing parameters are given by class initialization.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>qc_len_thr</strong>:  the pruning length threshold for quality control.</li>\n<li><strong>min_node_count</strong>:  the minimum allowed count of node of the final SWC.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">qc_len_thr</span><span class=\"o\">=</span><span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">min_node_count</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"fullname": "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel", "modulename": "dsmtools.preprocessing.sequencing", "qualname": "NeuronSequenceDataset.make_sequences_parallel", "kind": "function", "doc": "<p>Make the sequence dataset that can be further converted to I for other models.</p>\n\n<p>Before running this function, read &amp; qc are supposed to have been committed.\nIt gives you a dataframe containing only features sufficient for our models in the order of\nbinary tree preorder traversals of each neuron tree. You can inherit and derive this function as well as its\nmultiprocessing unit. Many of the traversal related functions are in BinarySubtree and NeuronSequencer\nclasses.</p>\n\n<p>It makes the sequences for every SWC passing QC, in the order of binary tree preorder traversals, and uses the\ntraversal to reindex the SWC and output the features.\nIt will also add CCFv3 regions and topological annotations as features corresponding to each node.</p>\n\n<p>CCF regions features are brain region names given CCFv3 atlas, which there is a word2vec model to give\na quantitative representation for each. The column name will be <code>node_type</code>.</p>\n\n<p>Topological annotations are made up of four types: GBTR, respectively representing\ngeneral, branch, terminal, and root. The column name will be <code>region</code>.</p>\n\n<p>Some columns of the dataframes are shallow copies of those from SWC after QC, be wary when deriving.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ordering</strong>:  the traversal type, either 'pre', 'in', or 'post'.</li>\n<li><strong>lesser_first</strong>:  whether traversing from lesser to greater, affect both within and among subtrees.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"s1\">&#39;pre&#39;</span>, </span><span class=\"param\"><span class=\"n\">lesser_first</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.swc_qc": {"fullname": "dsmtools.preprocessing.swc_qc", "modulename": "dsmtools.preprocessing.swc_qc", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"fullname": "dsmtools.preprocessing.swc_qc.SWCQualityControl", "modulename": "dsmtools.preprocessing.swc_qc", "qualname": "SWCQualityControl", "kind": "class", "doc": "<p>A class used to do necessary quality control steps for our deep learning application.\nIt ensures:</p>\n\n<ul>\n<li>only one soma(parent=-1) in one SWC</li>\n<li>no short tip branches(length &lt; 10 by default)</li>\n<li>no multifurcation node</li>\n</ul>\n\n<p>By providing a neuron tree in <code>Pandas.DataFrame</code> for class initialization,\nyou can call each member function for quality control, and each time the functions will store their results.\nThe tree used by this class is only a shallow reference, meaning after this control, the result is already in\nyour I dataframe.</p>\n\n<p>Advised order of QC process:</p>\n\n<ol>\n<li>retain_only_1st_root</li>\n<li>adjust_multifurcation</li>\n<li>prune_by_len</li>\n</ol>\n"}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"fullname": "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__", "modulename": "dsmtools.preprocessing.swc_qc", "qualname": "SWCQualityControl.__init__", "kind": "function", "doc": "<p>Input an SWC that will only be referenced.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>swc</strong>:  an SWC pandas dataframe.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">swc</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span>)</span>"}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"fullname": "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root", "modulename": "dsmtools.preprocessing.swc_qc", "qualname": "SWCQualityControl.retain_only_1st_root", "kind": "function", "doc": "<p>Our model assumes only one tree in an SWC. Here the tree of first root in SWC,\nif multiple roots exist, will be retained and any other nodes will be dropped.\nIf your neuron structure is just broken for some reason, you can connect them\nusing Vaa3D's sort_neuron_swc plugin or whatever.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"fullname": "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len", "modulename": "dsmtools.preprocessing.swc_qc", "qualname": "SWCQualityControl.prune_by_len", "kind": "function", "doc": "<p>Too short terminal segments in a neuron tree is meaningless for our model and too many of\nthem would heavily burden the computation.</p>\n\n<p>This function iteratively prune the tree. Every time it finds the short terminal branches and delete them,\nand new terminal branches emerge, until no short branches detected. This way, the tree is ensured to be with\nno terminal branches shorter than the threshold, and the main skeleton to the farthest reach is maintained.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>len_thr</strong>:  the min length allowed for terminal branches, default as 10</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">len_thr</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"fullname": "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation", "modulename": "dsmtools.preprocessing.swc_qc", "qualname": "SWCQualityControl.adjust_multifurcation", "kind": "function", "doc": "<p>Turn all multifurcations into multiple serial bifurcations except root nodes.</p>\n\n<p>Converting neuron tree to sequence requires all branches to be bifurcation as binary tree traversal requires.\nThis function disintegrate multifurcations as bifurcations, by the order of the length of their child segments,\ni.e. the path distance from this multifurcation to the next branch point or terminal.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.utils": {"fullname": "dsmtools.utils", "modulename": "dsmtools.utils", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.utils.ccf_atlas": {"fullname": "dsmtools.utils.ccf_atlas", "modulename": "dsmtools.utils.ccf_atlas", "kind": "module", "doc": "<p>This module imported from <a href=\"https://github.com/pengxie-bioinfo/neuro_morpho_toolbox\">neuro-morpho-toolbox</a> (by Peng Xie)\nand only includes the necessary functions for loading CCFv3 mouse brain atlas. It can be used to retrieve brain region\ntypes of a certain location in the mouse brain template space.</p>\n\n<p>It's used by importing this module, and only CCFv3 related functions are exposed, such as:</p>\n\n<ul>\n<li><code>id_to_name</code>: Convert a CCFv3 region ID to its region name.</li>\n<li><code>get_node_region</code>: Given a coordinate, return the region name.</li>\n<li><code>annotate_swc</code>: Given an SWC (with a series of coordinates), add a new column with regions mapped by node locations.</li>\n</ul>\n"}, "dsmtools.utils.misc": {"fullname": "dsmtools.utils.misc", "modulename": "dsmtools.utils.misc", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"fullname": "dsmtools.utils.misc.safe_recursion_bootstrap", "modulename": "dsmtools.utils.misc", "qualname": "safe_recursion_bootstrap", "kind": "function", "doc": "<p>stack runs like decorator -> func -> decorator -> return, so the recursion stack never exceeds 2.</p>\n\n<p>Usage: put a stack in your kwargs and it maintains the recursion.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Generator</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.utils.swc": {"fullname": "dsmtools.utils.swc", "modulename": "dsmtools.utils.swc", "kind": "module", "doc": "<p></p>\n"}, "dsmtools.utils.swc.Type": {"fullname": "dsmtools.utils.swc.Type", "modulename": "dsmtools.utils.swc", "qualname": "Type", "kind": "class", "doc": "<p>An enumeration.</p>\n", "bases": "enum.IntEnum"}, "dsmtools.utils.swc.Type.SOMA": {"fullname": "dsmtools.utils.swc.Type.SOMA", "modulename": "dsmtools.utils.swc", "qualname": "Type.SOMA", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Type.SOMA: 1&gt;"}, "dsmtools.utils.swc.Type.AXON": {"fullname": "dsmtools.utils.swc.Type.AXON", "modulename": "dsmtools.utils.swc", "qualname": "Type.AXON", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Type.AXON: 2&gt;"}, "dsmtools.utils.swc.Type.BASAL": {"fullname": "dsmtools.utils.swc.Type.BASAL", "modulename": "dsmtools.utils.swc", "qualname": "Type.BASAL", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Type.BASAL: 3&gt;"}, "dsmtools.utils.swc.Type.APICAL": {"fullname": "dsmtools.utils.swc.Type.APICAL", "modulename": "dsmtools.utils.swc", "qualname": "Type.APICAL", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Type.APICAL: 4&gt;"}, "dsmtools.utils.swc.read": {"fullname": "dsmtools.utils.swc.read", "modulename": "dsmtools.utils.swc", "qualname": "read", "kind": "function", "doc": "<p>function for reading SWC file (neuron tree)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  string or path like object to an SWC file</li>\n<li><strong>mode</strong>:  \"simple\" for classic SWC files with 7 columns; \"with_features\" for extra columns storing preprocessing for each\nnode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>a <code>Pandas.DataFrame</code> that contains everything.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;simple&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "dsmtools.utils.swc.sort": {"fullname": "dsmtools.utils.swc.sort", "modulename": "dsmtools.utils.swc", "qualname": "sort", "kind": "function", "doc": "<p>Give the SWC a new set of id from 1, using dfs. Allowing I SWC to have only 1 root. The modification is inplace.\nDifferent from the Vaa3D plugin if you may notice, it doesn't use a LUT and node of same coordinates and radius\nwon't be merged.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>swc</strong>:  SWC to be sorted.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">swc</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dsmtools.utils.swc.get_child_dict": {"fullname": "dsmtools.utils.swc.get_child_dict", "modulename": "dsmtools.utils.swc", "qualname": "get_child_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">swc</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dsmtools.utils.swc.get_path_len": {"fullname": "dsmtools.utils.swc.get_path_len", "modulename": "dsmtools.utils.swc", "qualname": "get_path_len", "kind": "function", "doc": "<p>Calculate total path distance given an SWC. This SWC can be incomplete, i.e.\nit ignores nodes with parents not found.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>swc</strong>:  SWC preprocessing frame.</li>\n<li><strong>nodes</strong>:  specify a set of node indices instead of using all.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>sum of path distance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">swc</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">nodes</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dsmtools.utils.swc.get_segments": {"fullname": "dsmtools.utils.swc.get_segments", "modulename": "dsmtools.utils.swc", "qualname": "get_segments", "kind": "function", "doc": "<p>Convert SWC to a new dataframe of segments. A segment is defined as a series connected points between critical nodes\n(branches &amp; terminals), usually include the far node and exclude the near node.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>swc</strong>:  SWC dataframe.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>dataframe indexed by the far node of each segment, fields include nodes, parentSeg, childSeg</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">swc</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"dsmtools": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 943}, "dsmtools.modeling": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.modeling.AE": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.modeling.AE.DSMAutoencoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 3}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 17}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 41}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 54}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 32}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 19}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "dsmtools.modeling.HAN": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.modeling.HAN.AttentionLayer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 2304}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 117}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 43}, "dsmtools.modeling.HAN.AttentionLayer.call": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 392}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 91}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 3}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 17}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 130, "bases": 0, "doc": 63}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 68}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 32}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 25}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "dsmtools.modeling.data_prep": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.modeling.data_prep.DSMDataConverter": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 23}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 28}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 41}, "dsmtools.modeling.model_abstract": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.modeling.model_abstract.ModelAbstract": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 17}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 19}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 19}, "dsmtools.preprocessing": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.preprocessing.neuron_tree": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 94}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 88}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 10}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 194}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 149}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 255}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 152}, "dsmtools.preprocessing.sequencing": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 118}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 83, "bases": 0, "doc": 131}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 33}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 35}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 88}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 28}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 66}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 252}, "dsmtools.preprocessing.swc_qc": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 132}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 28}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 57}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 105}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 63}, "dsmtools.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.utils.ccf_atlas": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 125}, "dsmtools.utils.misc": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 35}, "dsmtools.utils.swc": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.utils.swc.Type": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 5}, "dsmtools.utils.swc.Type.SOMA": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.utils.swc.Type.AXON": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.utils.swc.Type.BASAL": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.utils.swc.Type.APICAL": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "dsmtools.utils.swc.read": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 72}, "dsmtools.utils.swc.sort": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 70}, "dsmtools.utils.swc.get_child_dict": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "dsmtools.utils.swc.get_path_len": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 70}, "dsmtools.utils.swc.get_segments": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 74}}, "length": 79, "save": true}, "index": {"qualname": {"root": {"1": {"2": {"8": {"2": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}, "docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}}, "df": 9, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}}, "df": 8}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.get_child_dict": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}}, "df": 9}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.swc.get_child_dict": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 3}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools.utils.swc.Type.SOMA": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "e": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.utils.swc.Type.AXON": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.model_abstract.ModelAbstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "y": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.utils.swc.Type.BASAL": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.Type": {"tf": 1}, "dsmtools.utils.swc.Type.SOMA": {"tf": 1}, "dsmtools.utils.swc.Type.AXON": {"tf": 1}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}}}, "fullname": {"root": {"1": {"2": {"8": {"2": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}, "docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}}, "df": 9, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling": {"tf": 1}, "dsmtools.modeling.AE": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}, "dsmtools.modeling.data_prep": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.modeling.model_abstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}, "dsmtools.preprocessing": {"tf": 1}, "dsmtools.preprocessing.neuron_tree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.misc": {"tf": 1}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}, "dsmtools.utils.swc": {"tf": 1}, "dsmtools.utils.swc.Type": {"tf": 1}, "dsmtools.utils.swc.Type.SOMA": {"tf": 1}, "dsmtools.utils.swc.Type.AXON": {"tf": 1}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 79}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}}, "df": 8}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools.modeling.data_prep": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.get_child_dict": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.model_abstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling": {"tf": 1}, "dsmtools.modeling.AE": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}, "dsmtools.modeling.data_prep": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.modeling.model_abstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 36}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.model_abstract.ModelAbstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.utils.misc": {"tf": 1}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}}, "df": 10}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.model_abstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 5}}}}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.utils.swc.Type.AXON": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}}, "df": 9}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "f": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.swc.get_child_dict": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {"dsmtools.modeling.data_prep": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 5, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing": {"tf": 1}, "dsmtools.preprocessing.neuron_tree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 27}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}}, "df": 3}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.preprocessing.swc_qc": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc": {"tf": 1}, "dsmtools.utils.swc.Type": {"tf": 1}, "dsmtools.utils.swc.Type.SOMA": {"tf": 1}, "dsmtools.utils.swc.Type.AXON": {"tf": 1}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 17, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools.utils.swc.Type.SOMA": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 17}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 11, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 11, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.Type": {"tf": 1}, "dsmtools.utils.swc.Type.SOMA": {"tf": 1}, "dsmtools.utils.swc.Type.AXON": {"tf": 1}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 5}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "y": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.utils.swc.Type.BASAL": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.misc": {"tf": 1}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}, "dsmtools.utils.swc": {"tf": 1}, "dsmtools.utils.swc.Type": {"tf": 1}, "dsmtools.utils.swc.Type.SOMA": {"tf": 1}, "dsmtools.utils.swc.Type.AXON": {"tf": 1}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 15}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"1": {"docs": {"dsmtools.utils.swc.Type.SOMA": {"tf": 1}}, "df": 1}, "2": {"docs": {"dsmtools.utils.swc.Type.AXON": {"tf": 1}}, "df": 1}, "3": {"docs": {"dsmtools.utils.swc.Type.BASAL": {"tf": 1}}, "df": 1}, "4": {"docs": {"dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 1}, "docs": {"dsmtools.utils.swc.Type.SOMA": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.Type.AXON": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1.4142135623730951}}, "df": 4, "l": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.Type.SOMA": {"tf": 1}, "dsmtools.utils.swc.Type.AXON": {"tf": 1}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.Type.SOMA": {"tf": 1}, "dsmtools.utils.swc.Type.AXON": {"tf": 1}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools.utils.swc.Type.SOMA": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.Type.SOMA": {"tf": 1}, "dsmtools.utils.swc.Type.AXON": {"tf": 1}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.utils.swc.Type.AXON": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.utils.swc.Type.APICAL": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.utils.swc.Type.BASAL": {"tf": 1}}, "df": 1}}}}}}}, "signature": {"root": {"1": {"0": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2}, "2": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1}, "docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"0": {"0": {"0": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}}, "df": 2}, "docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}, "docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "3": {"0": {"0": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "2": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}}, "df": 1}, "9": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.read": {"tf": 1.4142135623730951}}, "df": 6}, "docs": {}, "df": 0}, "4": {"0": {"0": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 2}, "docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}, "docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 5.656854249492381}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 8.246211251235321}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 8.774964387392123}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 8.306623862918075}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 3.7416573867739413}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 3.7416573867739413}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 3.4641016151377544}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 3.1622776601683795}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 4.69041575982343}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 5.0990195135927845}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 3.7416573867739413}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 5.656854249492381}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 9.848857801796104}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 8.18535277187245}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 8.306623862918075}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 4.242640687119285}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 2.6457513110645907}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 8.54400374531753}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 5.830951894845301}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 7.810249675906654}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 5.0990195135927845}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 5.656854249492381}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 4.69041575982343}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 5.744562646538029}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 4.242640687119285}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 4.242640687119285}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 4.242640687119285}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 4.242640687119285}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 5.656854249492381}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 5.5677643628300215}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 5.916079783099616}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 8.12403840463596}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 5.656854249492381}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 5.656854249492381}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 4.242640687119285}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 3.1622776601683795}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 5.0990195135927845}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 5.291502622129181}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 4.898979485566356}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 3.1622776601683795}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 4.242640687119285}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 3.1622776601683795}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 4.898979485566356}, "dsmtools.utils.swc.read": {"tf": 7.3484692283495345}, "dsmtools.utils.swc.sort": {"tf": 5.0990195135927845}, "dsmtools.utils.swc.get_child_dict": {"tf": 6.164414002968976}, "dsmtools.utils.swc.get_path_len": {"tf": 6.855654600401044}, "dsmtools.utils.swc.get_segments": {"tf": 6.324555320336759}}, "df": 50, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}}, "df": 3}, "m": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1.4142135623730951}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 12}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 12}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 28}}, "q": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.read": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 12}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 12}}}}, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 10}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 4, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1.4142135623730951}}, "df": 4}, "s": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.read": {"tf": 1}}, "df": 1, "l": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 6}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.get_child_dict": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}}, "df": 5}}}}}}, "v": {"2": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1}}, "df": 5}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1.4142135623730951}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 7}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 5}, "w": {"2": {"docs": {}, "df": 0, "v": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_child_dict": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 7}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}}, "df": 2}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1}}}}, "bases": {"root": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}}, "df": 2}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.utils.swc.Type": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.utils.swc.Type": {"tf": 1}}, "df": 1}}}}}}}}}, "doc": {"root": {"0": {"docs": {"dsmtools": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 2}, "1": {"0": {"docs": {"dsmtools": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 4}, "2": {"8": {"2": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"2": {"7": {"6": {"2": {"1": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"1": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"dsmtools": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}}}, "2": {"0": {"0": {"0": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"0": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "2": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"2": {"0": {"3": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "docs": {"dsmtools": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 3}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 5}, "3": {"0": {"0": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 2}, "9": {"docs": {"dsmtools": {"tf": 2.8284271247461903}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 3}}, "df": 2}, "docs": {"dsmtools": {"tf": 2}}, "df": 1, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1}}, "4": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 2}, "5": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"docs": {"dsmtools.utils.swc.read": {"tf": 1}}, "df": 1}, "9": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "docs": {"dsmtools": {"tf": 22.40535650240808}, "dsmtools.modeling": {"tf": 1.7320508075688772}, "dsmtools.modeling.AE": {"tf": 1.7320508075688772}, "dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1.4142135623730951}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 3.605551275463989}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 5.477225575051661}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 6.324555320336759}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 5}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 3.872983346207417}, "dsmtools.modeling.AE.DSMAutoencoder.evaluate": {"tf": 1.7320508075688772}, "dsmtools.modeling.AE.DSMAutoencoder.load_1282_seu": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 34.813790371058424}, "dsmtools.modeling.HAN.AttentionLayer.__init__": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 4.47213595499958}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 3}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 8.602325267042627}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 3.4641016151377544}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 3.605551275463989}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 6.708203932499369}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 7.0710678118654755}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 5}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 4.47213595499958}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.load_1282_seu": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.label_encoder_1282_seu": {"tf": 1.7320508075688772}, "dsmtools.modeling.data_prep": {"tf": 1.7320508075688772}, "dsmtools.modeling.data_prep.DSMDataConverter": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 4.242640687119285}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 4.47213595499958}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 5.477225575051661}, "dsmtools.modeling.model_abstract": {"tf": 1.7320508075688772}, "dsmtools.modeling.model_abstract.ModelAbstract": {"tf": 1.4142135623730951}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 3.605551275463989}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 3.872983346207417}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 3.872983346207417}, "dsmtools.preprocessing": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 3}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 4.898979485566356}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.preorder": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.inorder": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.postorder": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 4.898979485566356}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 4.69041575982343}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 5.5677643628300215}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 6.082762530298219}, "dsmtools.preprocessing.sequencing": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 3.4641016151377544}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 5.830951894845301}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 3.605551275463989}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 3.605551275463989}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 4.795831523312719}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 4.358898943540674}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 6.164414002968976}, "dsmtools.preprocessing.swc_qc": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 5.477225575051661}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 3.7416573867739413}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 4}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 2.449489742783178}, "dsmtools.utils": {"tf": 1.7320508075688772}, "dsmtools.utils.ccf_atlas": {"tf": 5.0990195135927845}, "dsmtools.utils.misc": {"tf": 1.7320508075688772}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 3}, "dsmtools.utils.swc": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.Type": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.Type.SOMA": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.Type.AXON": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.Type.BASAL": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.Type.APICAL": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.read": {"tf": 5.291502622129181}, "dsmtools.utils.swc.sort": {"tf": 3.7416573867739413}, "dsmtools.utils.swc.get_child_dict": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.get_path_len": {"tf": 5.291502622129181}, "dsmtools.utils.swc.get_segments": {"tf": 4.69041575982343}}, "df": 79, "d": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 2.449489742783178}}, "df": 1, "m": {"docs": {"dsmtools": {"tf": 2}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.8284271247461903}}, "df": 1, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 10}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 2, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 3}, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1.7320508075688772}}, "df": 7, "s": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 2, "n": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 4}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.sort": {"tf": 1.4142135623730951}}, "df": 3, "o": {"docs": {"dsmtools": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 4.242640687119285}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2.23606797749979}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 2.23606797749979}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 2.449489742783178}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.7320508075688772}, "dsmtools.utils.ccf_atlas": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 23, "o": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools": {"tf": 2}}, "df": 1}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 20}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 3}}}, "p": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}}, "df": 2}}}}, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.7416573867739413}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 13}, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 5}}, "e": {"docs": {"dsmtools": {"tf": 3.7416573867739413}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 7.54983443527075}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 2.8284271247461903}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 3.872983346207417}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 2.449489742783178}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 2.6457513110645907}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 2.23606797749979}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 3}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 3}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 3.872983346207417}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 3.4641016151377544}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 2.23606797749979}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 3.4641016151377544}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 2.8284271247461903}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 2}, "dsmtools.utils.ccf_atlas": {"tf": 1.7320508075688772}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.sort": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.get_segments": {"tf": 1.7320508075688772}}, "df": 28, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}, "m": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.4142135623730951}}, "df": 7}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 2}}, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.605551275463989}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 21}}, "r": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 12, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2.23606797749979}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 5, "s": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 4.69041575982343}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.449489742783178}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1.4142135623730951}}, "df": 4}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 2.23606797749979}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 4, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 7, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}}, "f": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.872983346207417}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 9, "s": {"docs": {"dsmtools": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 3}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 3.4641016151377544}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 17, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}, "n": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 4.47213595499958}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.6457513110645907}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 2}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 15, "t": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools": {"tf": 2}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.872983346207417}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.8284271247461903}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.605551275463989}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 3.4641016151377544}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.605551275463989}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 2, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.7320508075688772}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 19, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 9}, "d": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 4.58257569495584}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.8284271247461903}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2.449489742783178}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 2.23606797749979}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1.7320508075688772}}, "df": 27, "n": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.Type": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 15, "d": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 4.123105625617661}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 2.6457513110645907}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 2.23606797749979}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 2.6457513110645907}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 2}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 22}, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2.449489742783178}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 2.23606797749979}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 18, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.449489742783178}}, "df": 2}}}}}}}, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 2.23606797749979}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 12}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "e": {"docs": {"dsmtools": {"tf": 2.8284271247461903}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 2}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.6457513110645907}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 5}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 1, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 2}, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 2}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_path_len": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 34}}}}}}}, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 2}}, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.6457513110645907}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 2, "s": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 2, "l": {"docs": {"dsmtools": {"tf": 2}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 8, "s": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}, "x": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 6}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2}}, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.449489742783178}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}, "s": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 3, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.8284271247461903}}, "df": 1}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}}, "df": 2}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 2, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 3, "s": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1.7320508075688772}}, "df": 1}, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.7320508075688772}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 2}}, "df": 2, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 5, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}}, "df": 2, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.7320508075688772}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 2, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 2, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 3}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 15, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 4}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 4}, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.7320508075688772}}, "df": 13, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"dsmtools.utils.swc.read": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "f": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1, "v": {"3": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1.7320508075688772}}, "df": 2}, "docs": {}, "df": 0}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1, "n": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "r": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 2}}, "w": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 3}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "o": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.4142135623730951}}, "df": 5, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1.7320508075688772}}, "df": 14, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2.23606797749979}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 7}}}, "w": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 7, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}}, "df": 1, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 4}}, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.4641016151377544}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "q": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 6, "s": {"docs": {"dsmtools": {"tf": 2.23606797749979}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {"dsmtools": {"tf": 1.7320508075688772}}, "df": 1}, "t": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 5.916079783099616}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1.7320508075688772}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 3, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.utils.swc.read": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 6}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 10}, "a": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1.7320508075688772}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.read": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.sort": {"tf": 2}, "dsmtools.utils.swc.get_path_len": {"tf": 2}, "dsmtools.utils.swc.get_segments": {"tf": 1.7320508075688772}}, "df": 19}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 6, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 6, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.7320508075688772}}, "df": 2, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.4641016151377544}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 2.6457513110645907}}, "df": 3, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 6, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2.23606797749979}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}, "m": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.1622776601683795}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.8284271247461903}}, "df": 1, "y": {"docs": {"dsmtools": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 2}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 16}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 3, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.1622776601683795}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}}, "df": 4}, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 4.242640687119285}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 2}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 21, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 5, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 2.23606797749979}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.7320508075688772}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1.4142135623730951}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 9, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 6.164414002968976}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 2}}, "df": 6, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 7, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 3.3166247903554}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.8284271247461903}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 2.6457513110645907}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 2}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 2}}, "df": 19}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 2}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 7}}}}}}, "d": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 5}}}, "t": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 5}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1.4142135623730951}}, "df": 12}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 7, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "w": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 6, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1}, "d": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.utils.swc.Type": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}}, "df": 3}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools.utils.swc.read": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"dsmtools": {"tf": 1}}, "df": 1, "c": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.utils.swc.read": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}}, "w": {"2": {"docs": {}, "df": 0, "v": {"docs": {"dsmtools.modeling.data_prep.DSMDataConverter.__init__": {"tf": 1}}, "df": 1}}, "docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.8284271247461903}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.read": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 12, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1.4142135623730951}}, "df": 11}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 9}}}}, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.8284271247461903}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 5.0990195135927845}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "d": {"2": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}, "docs": {"dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}}, "df": 2}}, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {"dsmtools": {"tf": 2.23606797749979}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 2}}}, "z": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "h": {"5": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 2.8284271247461903}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 5}}, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "w": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2, "t": {"docs": {"dsmtools": {"tf": 2.6457513110645907}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 4, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}, "+": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 3, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.AE.DSMAutoencoder.__init__": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.__init__": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 6, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3, "y": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.utils.swc.read": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 6, "s": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.fit": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.AE.DSMAutoencoder.predict": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.plot_learning_curve": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_ae": {"tf": 1}, "dsmtools.modeling.data_prep.DSMDataConverter.convert_for_han": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.load": {"tf": 1}, "dsmtools.modeling.model_abstract.ModelAbstract.predict": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 22}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.7320508075688772}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 2.23606797749979}}, "df": 3, "s": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 2, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.utils.swc.sort": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 7, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 4, "r": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 2, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}}, "df": 8}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.7320508075688772}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.modeling.HAN.AttentionLayer.supports_masking": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}, "dsmtools.utils.swc.get_path_len": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.utils.swc.get_segments": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 3.1622776601683795}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.fit": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.evaluate": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {"dsmtools": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 12, "r": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 2}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}}, "df": 6}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.8284271247461903}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.6457513110645907}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 13, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_sequences": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.pickle_qc": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1.4142135623730951}}, "df": 4, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "/": {"1": {"0": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}}, "df": 7, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {"dsmtools": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}}, "df": 6}}, "f": {"docs": {"dsmtools": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 4.69041575982343}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.23606797749979}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 2.23606797749979}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.tot_path_len": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 2.23606797749979}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 2}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 2.6457513110645907}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.prune_by_len": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.adjust_multifurcation": {"tf": 1.4142135623730951}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.sort": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.get_path_len": {"tf": 1.7320508075688772}, "dsmtools.utils.swc.get_segments": {"tf": 1.4142135623730951}}, "df": 26, "f": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.qc_parallel": {"tf": 1}}, "df": 4, "e": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.get_config": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_mask": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.compute_output_shape": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 9, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2.449489742783178}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl": {"tf": 1.7320508075688772}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.__init__": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.ccf_atlas": {"tf": 1.4142135623730951}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 8}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.AE.DSMAutoencoder.compile": {"tf": 1}, "dsmtools.modeling.HAN.DSMHierarchicalAttentionNetwork.compile": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.read_parallel": {"tf": 1}, "dsmtools.utils.swc.read": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.collective_traversal": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}, "dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}, "dsmtools.preprocessing.sequencing.NeuronSequenceDataset.make_sequences_parallel": {"tf": 1}, "dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}}, "df": 5, "s": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dsmtools": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.23606797749979}}, "df": 1, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2.449489742783178}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.preprocessing.neuron_tree.NeuronTree.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 1}}}}, "a": {"3": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.preprocessing.swc_qc.SWCQualityControl.retain_only_1st_root": {"tf": 1}, "dsmtools.utils.swc.sort": {"tf": 1}}, "df": 2}}, "docs": {}, "df": 0}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dsmtools.preprocessing.neuron_tree.NeuronTree.find_binary_trees_in": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dsmtools.preprocessing.sequencing.NeuronSequenceDataset.result": {"tf": 1}}, "df": 1, "n": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 2}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}}, "df": 2}}}, "y": {"docs": {"dsmtools.preprocessing.neuron_tree.BinarySubtree.__init__": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 2}}, "df": 2}}}}, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"dsmtools.modeling.HAN.AttentionLayer": {"tf": 1.4142135623730951}, "dsmtools.modeling.HAN.AttentionLayer.call": {"tf": 1.4142135623730951}, "dsmtools.utils.misc.safe_recursion_bootstrap": {"tf": 1}}, "df": 3}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();